# Assignment 3
library(neuralnet)
library(gtools)
library(glue)
printf <- defmacro(str, expr = {print(glue(str))})
# Saves plots as pdf files
savePlotAsPdf <- function(filename){
dev.copy(pdf, glue('img/{filename}.pdf'),
width = 10, height = 8,
pointsize=12)
dev.off()
}
# Creating output variable
output = list()
# Part 1
set.seed(1234567890)
Var <- runif(500, 0, 10)
mydata <- data.frame(Var, Sin=sin(Var))
tr <- mydata[1:25,] # Training
te <- mydata[26:500,] # Test
View(te)
source("~/Programs/repositories/uni/university-courses/tdde01-machine-learning/lab3/nn.r", echo=TRUE)
source("~/Programs/repositories/uni/university-courses/tdde01-machine-learning/lab3/nn.r", echo=TRUE)
plot(tr, cex=2)
points(te, col = "blue", cex=1)
points(te[,1],predict(nn,te), col="red", cex=1)
title("Prediction neural network 0 to 10")
legend("bottomleft",
inset=.02,
title="Datapoints",
c("Training","Testing","Predicted"),
col=c("black","blue","red"),
lwd=1,
lty=c(0,0),
pch=c(1,1,1))
source("~/Programs/repositories/uni/university-courses/tdde01-machine-learning/lab3/nn.r", echo=TRUE)
Var2 <- runif(500, 0, 50)
mydata2 <- data.frame(Var=Var2, Sin=sin(Var2))
plot(mydata2[,1],predict(nn,mydata2),
col="red", cex=1,
xlab="Var", ylab="Sin")
points(mydata2, col = "blue", cex=1)
legend("bottomleft",
y=-6,
legend =c("Sample", "Predicted"),
title="Datapoints",
pch=1, pt.cex=2, cex=1,
col = c("blue", "red"))
predict(nn,mydata2)
predict(nn,mydata2)
plot(nn)
conv.prediction = predict(nn,data.frame(Var=1000))
conv.w.L1 = nn$weights[[1]][[1]][2,]
conv.mask <- 0 < c(1, conv.w.L1)
conv.w.L2 = nn$weights[[1]][[2]]
conv.calculation = sum(conv.mask * conv.w.L2)
output$o3.4 = printf("Convergence of nn
Calculation : {conv.calculation}
Prediction  : {conv.prediction}
")
source("~/Programs/repositories/uni/university-courses/tdde01-machine-learning/lab3/nn.r", echo=TRUE)
source("~/Programs/repositories/uni/university-courses/tdde01-machine-learning/lab3/nn.r", echo=TRUE)
